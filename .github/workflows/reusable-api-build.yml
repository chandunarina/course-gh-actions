on: 
  workflow_call: 
    inputs:
      build_configuration:
        description: dotnet build configuration i.e. Debug or Release
        type: string
        required: true
      environment:
        description: Github environment for deployment
        type: string
        required: true
      application_name: 
        description: Application Name for deployment
        type: string
        required: true

defaults:
  run:
    shell: bash

jobs:
    build:
        defaults:
          run:
            working-directory: .
        name: dotnet release build & upload
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4

          - run: ls -R

          - run: |
              pwd
              make dotnet-list-runtimes
            name: list dotnet runtimes

          - run: make dotnet-list-sdks
            name: list dotnet sdks

          - run: make build_configuration=${{inputs.build_configuration}} dotnet-build
            name: dotnet Release build

          - run: make dotnet-test
            name: dotnet test

          - name: upload-api-single-file
            id: upload-api-single-file
            uses: actions/upload-artifact@v4
            with:
              name: api_${{inputs.environment}}
              path: ./api/**/bin/Release/**/api.dll
              include-hidden-files: true
          - name: Output artifact ID
            run:  echo 'Artifact ID is ${{ steps.upload-api-single-file.outputs.artifact-id }}'  

          - name: copy required artifacts into ${{inputs.application_name}} folder
            run: |
              cp -r -f bin/Release/**/ "${{github.workspace}}/${{inputs.application_name}}"
              cp -f compose.yaml "${{github.workspace}}/${{inputs.application_name}}"
              cp -f Makefile Dockerfile "${{github.workspace}}/${{inputs.application_name}}"

          - name: upload-app-artifacts
            id: upload-app-artifacts
            uses: actions/upload-artifact@v4
            with:
              name: app_${{inputs.environment}}
              path: ./${{inputs.application_name}}
              include-hidden-files: true
          - name: Output artifact ID
            run:  echo 'Artifact ID is ${{ steps.upload-app-artifacts.outputs.artifact-id }}'  
        

