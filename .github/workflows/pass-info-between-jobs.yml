name: pass-info-between-jobs

on:
  workflow_dispatch: 

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: print previous job's outputs by setting step-level env
        id: step1
        env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: |
          echo "$OUTPUT1 $OUTPUT2"    
          echo "${{env.OUTPUT1}} ${{env.OUTPUT2}}"
          echo "${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}"
          echo '${{ toJSON(needs.job1.outputs) }}'    
      - name: print previous job's outputs by setting step-level env
        id: step2 # step-level env of previous steps is not available to next steps
        run: |
          echo "${{toJson(env)}}"   
          echo "${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}"
  job3:
    runs-on: ubuntu-latest
    outputs:
      output_1: ${{ steps.gen_output.outputs.output_1 }}
      output_2: ${{ steps.gen_output.outputs.output_2 }}
      output_3: ${{ steps.gen_output.outputs.output_3 }}
      output_4: ${{ steps.step1.outputs.output_4 }}
    strategy:
      matrix:
        version: [1, 2, 3, 4]
    steps:
      - name: Generate output
        id: gen_output
        run: |
          version="${{ matrix.version }}"
          echo "output_${version}=${version}" >> "$GITHUB_OUTPUT"
      - name: print "$GITHUB_OUTPUT"
        id: step1
        run: |
          version="${{ matrix.version }}"
          echo "output_${version}=${version}" >> "$GITHUB_OUTPUT"
          echo "GITHUB_OUTPUT of step1:= $GITHUB_OUTPUT"
          echo "updated GITHUB_OUTPUT of STEP1: $(cat $GITHUB_OUTPUT)"

  job4:
    runs-on: ubuntu-latest
    needs: [job3]
    steps:
      # Will show
      # {
      #   "output_1": "1",
      #   "output_2": "2",
      #   "output_3": "3"
      # }
      - run: echo '${{ toJSON(needs.job3.outputs) }}'          