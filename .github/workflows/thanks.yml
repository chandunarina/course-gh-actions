name: thanks

on: 
  issues: 
    types: 
      - opened
  workflow_dispatch: # manual

jobs:
  thanks:
    runs-on: ubuntu-latest
    permissions: 
        issues: write
    steps:
      - name: View context attributes
        uses: actions/github-script@v7
        with:
          script: |
            // console.log(context)
            // console.log(context.issue)
            // console.log(context.repo)
            console.log(`context: ${JSON.stringify(context)}`)
            console.log('==============================')

      - name: create an issue
        id: issue_script
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          result-encoding: string
          retries: 3
          script: |
            const issue_number = context.issue.number || 2
            const get_input_dict = {
                issue_number: issue_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
            }

            // look up an issue info
            console.log(get_input_dict)
            const issue = await github.rest.issues.get(get_input_dict)          
            console.log(`issue: ${JSON.stringify(issue)}`)

            const create_comment_input_dict = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: "Thanks for your contribution!"
            }            
            
            //create a comment thanking the contributore
            const comment = await github.rest.issues.createComment(create_comment_input_dict);
            //console.log(`comment: ${JSON.stringify(comment)}`)
            console.log(`comment id: ${comment.data.id}`);
            console.log(comment.data);

            // auto label
            const add_label_input_dict = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                labels: ["todo-review"]
            }  
            await github.rest.issues.addLabels(add_label_input_dict)

            // make comment id available to subsequent steps
            return comment.data.id;

      - run: echo ${{ steps.issue_script.outputs.result }}
          